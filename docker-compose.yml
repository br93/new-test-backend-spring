version: '3.3'
services:
  mongodb:
    image: mongo
    container_name: mongo
    restart: always
    ports:
      - 27017:27017
    logging:
      options:
        max-size: 1g
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongoadmin
      MONGO_INITDB_ROOT_PASSWORD: mongo
    
    volumes:
      - mongo-data:/data/db:rw
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
    networks:
      - test-network
  
  mongo-express:
    image: mongo-express
    container_name: mongo-express
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: mongoadmin
      ME_CONFIG_MONGODB_ADMINPASSWORD: mongo
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_BASICAUTH_USERNAME: mongoadmin
      ME_CONFIG_BASICAUTH_PASSWORD: mongo
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - test-network

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data:/var/lib/rabbitmq
      - ~/.docker-conf/rabbitmq/log:/var/log/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - test-network

  minio:
    image: minio/minio:latest
    container_name: minio
    environment:
      MINIO_ROOT_USER: "minioadmin"
      MINIO_ROOT_PASSWORD: "miniosecretkey"
    volumes:
      - ./data:/data
    ports:
      - 9000:9000
      - 9001:9001
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - test-network

  test-backend:
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: test-backend
    env_file:
      - ./docker.env
    ports:
      - 8080:8080
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      minio:
        condition: service_healthy
    networks:
      - test-network
    


networks:
  test-network:
    driver: bridge